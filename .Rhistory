rename(text = V1)
digitpattern <- paste0(c(replacements$word, "[:digit:]"), collapse = "|")
calibration_2 <- calibration_2 %>%
mutate(first_digit = stringi::stri_extract_first(text, regex = digitpattern),
last_digit  = stringi::stri_extract_last(text, regex = digitpattern))
calibration_2 <- calibration_2  %>%
left_join(replacements %>% rename(first_numeric = number), by = c("first_digit" = "word"))  %>%
left_join(replacements %>% rename(last_numeric = number), by = c("last_digit" = "word"))
calibration_2 <- calibration_2 %>%
mutate(first = ifelse(first_digit %in% replacements$number, first_digit, first_numeric),
last  = ifelse(last_digit  %in% replacements$number, last_digit,  last_numeric),
value = as.numeric(paste0(first, last, sep = "")))
calibration_2 %>% pull(value) %>% sum()
library(tidyverse)
calibration_raw <- read.table("data/day_1_input.txt", header = FALSE, sep = "")
calibration_1 <- calibration_raw %>%
rename(text = V1) %>%
mutate(digits = str_replace_all(text, "[a-z]", ""),
first  = str_sub(digits, 1, 1),
last   = str_sub(digits, nchar(digits), nchar(digits)),
value  = as.numeric(paste0(first, last, sep = "")))
calibration_1 %>% pull(value) %>% sum()
replacements <- data.frame(number = 1:9)
replacements <- replacements %>%
mutate(word =  xfun::numbers_to_words(number))
# calibration_raw = data.frame(V1 = c(
# "two1nine",
# "eightwothree",
# "abcone2threexyz",
# "xtwone3four",
# "4nineeightseven2",
# "zoneight234",
# "7pqrstsixteen"))
calibration_2 <- calibration_raw %>%
rename(text = V1)
digitpattern <- paste0(c(replacements$word, "[:digit:]"), collapse = "|")
calibration_2 <- calibration_2 %>%
mutate(first_digit = stringi::stri_extract_first(text, regex = digitpattern),
last_digit  = stringi::stri_extract_last(text, regex = digitpattern))
calibration_2 <- calibration_2  %>%
left_join(replacements %>% rename(first_numeric = number), by = c("first_digit" = "word"))  %>%
left_join(replacements %>% rename(last_numeric = number), by = c("last_digit" = "word"))
calibration_2 <- calibration_2 %>%
mutate(first = ifelse(first_digit %in% replacements$number, first_digit, first_numeric),
last  = ifelse(last_digit  %in% replacements$number, last_digit,  last_numeric),
value = as.numeric(paste0(first, last, sep = "")))
calibration_2 %>% pull(value) %>% sum()
calibration_2
View(calibration_2)
test <- "eighteightsrfcxtvg7three1two9nineeightwolqn"
stringi::stri_extract_last(test, regex = digitpattern)
digitpattern
stringi::str_rev(replacements$word)
stringi::str_reverse(replacements$word)
stringi::stri_reverse(replacements$word)
calibration_2 <- calibration_raw %>%
rename(text = V1)  %>%
mutate(text_rev = stringi::stri_reverse(text))
digitpattern <- paste0(c(replacements$word, "[:digit:]"), collapse = "|")
digitpattern_rev <- paste0(c(stringi::stri_reverse(replacements$word), "[:digit:]"), collapse = "|")
calibration_2 <- calibration_2 %>%
mutate(first_digit = str_extract(text, pattern = digitpattern),
#last_digit  = stringi::stri_extract_last(text, regex = digitpattern),
last_digit = str_extract(text_rev, pattern = digitpattern_rev))
calibration_2 <- calibration_2  %>%
left_join(replacements %>% rename(first_numeric = number), by = c("first_digit" = "word"))  %>%
left_join(replacements %>% rename(last_numeric = number), by = c("last_digit" = "word"))
calibration_2 <- calibration_2 %>%
mutate(first = ifelse(first_digit %in% replacements$number, first_digit, first_numeric),
last  = ifelse(last_digit  %in% replacements$number, last_digit,  last_numeric),
value = as.numeric(paste0(first, last, sep = "")))
calibration_2 %>% pull(value) %>% sum()
calibration_2
calibration_2 <- calibration_raw %>%
rename(text = V1)  %>%
mutate(text_rev = stringi::stri_reverse(text))
digitpattern <- paste0(c(replacements$word, "[:digit:]"), collapse = "|")
digitpattern_rev <- paste0(c(stringi::stri_reverse(replacements$word), "[:digit:]"), collapse = "|")
calibration_2 <- calibration_2 %>%
mutate(first_digit = str_extract(text, pattern = digitpattern),
#last_digit  = stringi::stri_extract_last(text, regex = digitpattern),
last_digit = str_extract(text_rev, pattern = digitpattern_rev),
last_digit = stringi::stri_reverse(last_digit))
calibration_2 <- calibration_2  %>%
left_join(replacements %>% rename(first_numeric = number), by = c("first_digit" = "word"))  %>%
left_join(replacements %>% rename(last_numeric = number), by = c("last_digit" = "word"))
calibration_2 <- calibration_2 %>%
mutate(first = ifelse(first_digit %in% replacements$number, first_digit, first_numeric),
last  = ifelse(last_digit  %in% replacements$number, last_digit,  last_numeric),
value = as.numeric(paste0(first, last, sep = "")))
calibration_2 %>% pull(value) %>% sum()
library(tidyverse)
scratch_raw <- read.table("data/day_4_input_test.txt", header = FALSE, sep = "")
# n_winning <- 10
# n_my      <- 25
n_winning <- 5
n_my <- 8
scratch <- scratch_raw %>%
select(where(is.numeric))
names(scratch) <- c(paste0("winning", 1:n_winning), paste0("my", 1:n_my))
scratch <- scratch %>%
mutate(card = seq_len(nrow(.)))
scratch_long <- scratch %>%
pivot_longer(cols = starts_with(c("winning", "my"))) %>%
mutate(type = str_replace(name, "[:digit:]+", ""))
scratch_my_nested <- scratch_long %>%
filter(type == "my") %>%
group_by(card) %>%
nest(.key = "my")
scratch_winning_nested <- scratch_long %>%
filter(type == "winning") %>%
group_by(card) %>%
nest(.key = "winning")
scratch_nested <- full_join(scratch_winning_nested, scratch_my_nested, by = "card")
scratch_matches <- scratch_nested %>%
mutate(matches = map2_int(.x = winning, .y = my, ~ length(intersect(.x$value, .y$value))))
scratch_matches <- scratch_matches %>%
mutate(score = case_when(matches == 0 ~ 0,
TRUE         ~ 2^(matches - 1)
)
)
scratch_matches %>% pull(score) %>% sum()
scratch_matches_extended <- scratch_matches
#scratch_matches_extended <- scratch_matches_extended[1:5,]
i <- 1
cards_left <- nrow(scratch_matches_extended)
while(cards_left > 0) {
card             <- scratch_matches_extended$card[i]
n_cards_to_add   <- scratch_matches$matches[card]
if(n_cards_to_add > 0){
seq_cards_to_add <- seq(card + 1, card + n_cards_to_add)
print("Row:")
print(i)
print("Card:")
print(card)
print("Number of cards to add:")
print(n_cards_to_add)
print("Add cards:")
print(seq_cards_to_add)
scratch_matches_to_add <- scratch_matches %>% filter(card %in% seq_cards_to_add)
scratch_matches_extended <- scratch_matches_extended %>%
bind_rows(scratch_matches_to_add) %>%
arrange(card)
}
cards_left <- nrow(scratch_matches_extended) - i
i = i + 1
}
scratch_matches_extended <- scratch_matches %>%
mutate(n_cards = 1)
for (card in 1:nrow(scratch_matches_extended)) {
n_copies_to_add  <- scratch_matches_extended$n_cards[card]
n_cards_to_add   <- scratch_matches_extended$matches[card]
seq_cards_to_add <- seq(card + 1, card + n_cards_to_add)
scratch_matches_extended <- scratch_matches_extended %>%
mutate(n_cards = ifelse(card %in% seq_cards_to_add, n_cards + n_copies_to_add, n_cards))
}
scratch_matches_extended %>% pull(n_cards) %>% sum()
scratch_matches_extended
Print("N copies to add:", n_copies_to_add)
print("Number of copies to add:", n_copies_to_add)
scratch_matches_extended <- scratch_matches %>%
mutate(n_cards = 1)
for (card in 1:nrow(scratch_matches_extended)) {
n_copies_to_add  <- scratch_matches_extended$n_cards[card]
n_cards_to_add   <- scratch_matches_extended$matches[card]
seq_cards_to_add <- seq(card + 1, card + n_cards_to_add)
print(paste("Number of copies to add:", n_copies_to_add))
print(paste("Number of cards to add:", n_cards_to_add))
print(paste("Cards to add:", seq_cards_to_add))
scratch_matches_extended <- scratch_matches_extended %>%
mutate(n_cards = ifelse(card %in% seq_cards_to_add, n_cards + n_copies_to_add, n_cards))
print(scratch_matches_extended)
}
scratch_matches %>%
mutate(n_cards = 1)
scratch_matches_extended %>% pull(n_cards) %>% sum()
scratch_matches_extended <- scratch_matches %>%
mutate(n_cards = 1)
for (card in 1:nrow(scratch_matches_extended)) {
n_copies_to_add  <- scratch_matches_extended$n_cards[card]
n_cards_to_add   <- scratch_matches_extended$matches[card]
seq_cards_to_add <- seq(card + 1, card + n_cards_to_add)
if(n_cards_to_add > 0){
scratch_matches_extended <- scratch_matches_extended %>%
mutate(n_cards = ifelse(card %in% seq_cards_to_add, n_cards + n_copies_to_add, n_cards))
}
print(scratch_matches_extended)
}
scratch_matches_extended %>% pull(n_cards) %>% sum()
library(tidyverse)
scratch_raw <- read.table("data/day_4_input.txt", header = FALSE, sep = "")
# n_winning <- 10
# n_my      <- 25
n_winning <- 5
n_my <- 8
scratch <- scratch_raw %>%
select(where(is.numeric))
names(scratch) <- c(paste0("winning", 1:n_winning), paste0("my", 1:n_my))
scratch <- scratch %>%
mutate(card = seq_len(nrow(.)))
library(tidyverse)
scratch_raw <- read.table("data/day_4_input.txt", header = FALSE, sep = "")
n_winning <- 10
n_my      <- 25
scratch <- scratch_raw %>%
select(where(is.numeric))
names(scratch) <- c(paste0("winning", 1:n_winning), paste0("my", 1:n_my))
scratch <- scratch %>%
mutate(card = seq_len(nrow(.)))
scratch_long <- scratch %>%
pivot_longer(cols = starts_with(c("winning", "my"))) %>%
mutate(type = str_replace(name, "[:digit:]+", ""))
scratch_my_nested <- scratch_long %>%
filter(type == "my") %>%
group_by(card) %>%
nest(.key = "my")
scratch_winning_nested <- scratch_long %>%
filter(type == "winning") %>%
group_by(card) %>%
nest(.key = "winning")
scratch_nested <- full_join(scratch_winning_nested, scratch_my_nested, by = "card")
scratch_matches <- scratch_nested %>%
mutate(matches = map2_int(.x = winning, .y = my, ~ length(intersect(.x$value, .y$value))))
scratch_matches <- scratch_matches %>%
mutate(score = case_when(matches == 0 ~ 0,
TRUE         ~ 2^(matches - 1)
)
)
scratch_matches %>% pull(score) %>% sum()
scratch_matches_extended <- scratch_matches %>%
mutate(n_cards = 1)
for (card in 1:nrow(scratch_matches_extended)) {
n_copies_to_add  <- scratch_matches_extended$n_cards[card]
n_cards_to_add   <- scratch_matches_extended$matches[card]
seq_cards_to_add <- seq(card + 1, card + n_cards_to_add)
if(n_cards_to_add > 0){
scratch_matches_extended <- scratch_matches_extended %>%
mutate(n_cards = ifelse(card %in% seq_cards_to_add, n_cards + n_copies_to_add, n_cards))
}
print(scratch_matches_extended)
}
scratch_matches_extended %>% pull(n_cards) %>% sum()
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_split  <- str_split(engine_string, pattern = "")
engine_split
is_engine_part_digit <- function(engine_split) {
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
environment <- environment[environment > 0 & environment < length(engine_split)]
map(engine_split, ~ sum(str_detect(.[environment], "[:punct:]")) > 0)
}
is_engine_part <- function(engine_split) {
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
environment <- environment[environment > 0 & environment < length(engine_split)]
map(engine_split, ~ sum(str_detect(.[environment], "[:punct:]")) > 0)
}
is_engine_part(engine_split)
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
length(engine_split)
nrow(engine_split)
dim(engine_split)
engine_split
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
is_engine_part <- function(engine_split) {
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
environment <- environment[environment > 0 & environment < length(engine_split)]
map(engine_split, ~ sum(str_detect(.[environment], "[:punct:]")) > 0)
}
is_engine_part(engine_split)
length(engine_split)
engine_split
row_length <- 10
symbols <- str_replace_all(engine_string, "[:digit:]", "") %>% str_split(pattern = "") %>% unlist() %>% unique()
symbols <- setdiff(symbols, ".")
is_engine_part <- function(engine_split) {
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
environment <- environment[environment > 0 & environment < length(engine_split)]
map(engine_split, ~ sum(str_detect(.[environment], "[:punct:]")) > 0)
}
is_engine_part(engine_split)
i <- 1
determine_environment <- function(i) {
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
environment <- environment[environment > 0 & environment < length(engine_split)]
}
determine_environment(i)
determine_environment(1)
determine_environment <- function(i) {
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
environment <- environment[environment > 0 & environment < length(engine_split)]
return(environment)
}
determine_environment(1)
length(determine_environment(1))
engine_split[determine_environment(1)]
map_lgl(engine_split, ~ str_detect(engine_split[determine_environment(seq_along(.))]))
map_lgl(engine_split, ~ str_detect(engine_split[determine_environment(seq_along(.))], "[:punct:]")
}
map_lgl(engine_split, ~ str_detect(engine_split[determine_environment(seq_along(.))], "[:punct:]"))
map(engine_split, ~ str_detect(engine_split[determine_environment(seq_along(.))], "[:punct:]"))
map(1:length(engine_split), ~ str_detect(engine_split[determine_environment(.)], "[:punct:]"))
symbols
map(1:length(engine_split), ~ str_detect(engine_split[determine_environment(.)], paste(symbols, collapse = "|")))
paste(symbols, collapse = "|")
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_string <- str_replace(engine_string, ".", " ")
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
map(1:length(engine_split), ~ str_detect(engine_split[determine_environment(.)], "[:digit:]"))
nchar(engine_string)
map(1:length(engine_split), ~ sum(str_detect(engine_split[determine_environment(.)], "[:digit:]")) > 0)
map_lgl(1:length(engine_split), ~ sum(str_detect(engine_split[determine_environment(.)], "[:digit:]")) > 0)
map_lgl(1:length(engine_split), ~ sum(str_detect(engine_split[determine_environment(.)], "[:punct:]")) > 0)
engine_split
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_string <- str_replace_all(engine_string, ".", " ")
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
determine_environment <- function(i) {
if(i %% 10 == 1) {
environment <- c(i + 1, # right,
i + row_length, i + row_length + 1, #below*
i - row_length, i - row_length + 1) #above
} else if(i %% 10 == 0) {
environment <- c(i - 1, # left,
i + row_length, i + row_length - 1, #below*
i - row_length, i - row_length - 1) #above
} else {
environment <- c(i - 1, # left,
i + 1, # right,
i + row_length, i + row_length - 1, i + row_length + 1, #below*
i - row_length, i - row_length - 1, i - row_length + 1) #above
}
environment <- environment[environment > 0 & environment < length(engine_split)]
return(environment)
}
engine_split_is_engine_part_digit <- map_lgl(1:length(engine_split), ~ sum(str_detect(engine_split[determine_environment(.)], "[:punct:]")) > 0)
engine_split_is_engine_part_digit
symbols
help(str_detect)
engine_split
engine_split_is_engine_part_digit <- map_lgl(1:length(engine_split),
~ sum(str_detect(engine_split[determine_environment(.)], fixed(paste(symbols, collapse = "|")))) > 0)
engine_split_is_engine_part_digit
paste(symbols, collapse = "|")
paste0("\", symbols)
)
""
''
"
"\"
"\ "
"\ "
paste0("\\", symbols)
paste(paste0("\\", symbols), collapse = "|")
str_detect(engine_split, "[:cntrl:]")
str_detect(engine_split, "\\D")
engine_split
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
str_detect(engine_split, "[:cntrl:]")
str_detect(engine_split, "\\D")
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
engine_split  <- map(engine_split, ~ str_replace("\.", ""))
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
engine_split  <- map(engine_split, ~ str_replace(., "\.", ""))
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
engine_split  <- map(engine_split, ~ str_replace(., "\\.", ""))
engine_split
engine_string <- "467..114.....*........35..633.......#...617*...........+.58...592...........755....$.*.....664.598.."
engine_split  <- str_split(engine_string, pattern = "") %>% unlist()
engine_split  <- map_chr(engine_split, ~ str_replace(., "\\.", ""))
engine_split
engine_split_is_engine_part_digit <- map_lgl(1:length(engine_split),
~ sum(str_detect(engine_split[determine_environment(.)], "[:digit:]", negate = TRUE))) > 0)
engine_split_is_engine_part_digit <- map_lgl(1:length(engine_split),
~ sum(str_detect(engine_split[determine_environment(.)], "[:digit:]", negate = TRUE)) > 0)
engine_split_is_engine_part_digit
engine_split_is_engine_part_digit <- map_lgl(1:length(engine_split),
~ sum(nchar(engine_split[determine_environment(.)]) > 0 &
str_detect(engine_split[determine_environment(.)], "[:digit:]", negate = TRUE)) > 0)
engine_split_is_engine_part_digit
engine_split_is_engine_part_digit <- map_lgl(1:length(engine_split),
~ is.numeric(engine_split[.]) &
sum(nchar(engine_split[determine_environment(.)]) > 0 &
str_detect(engine_split[determine_environment(.)], "[:digit:]", negate = TRUE)) > 0)
engine_split_is_engine_part_digit
engine_split_is_engine_part_digit <- map_lgl(1:length(engine_split),
~ str_detect(engine_split[.], "[:digit:]") &
sum(nchar(engine_split[determine_environment(.)]) > 0 &
str_detect(engine_split[determine_environment(.)], "[:digit:]", negate = TRUE)) > 0)
engine_split_is_engine_part_digit
i = 1
is.numeric(engine_split[i] & !is.numeric(engine_split[i-1]
)
)
is.numeric(engine_split[i]) & !is.numeric(engine_split[i-1])
is.numeric(engine_split[i])
engine_split  <- map_int(engine_split, ~ as.numeric)
engine_split  <- map_int(engine_split, ~ as.numeric(.))
engine_split
is.numeric(engine_split[i]
)
!is.numeric(engine_split[i-1])
is.numeric(engine_split[i-1])
i
engine_split[0]
is.null(engine_split[i-1]) | !is.numeric(engine_split[i-1])
is.null(engine_split[i-1])
i
is.null(engine_split[0])
engine_raw <- read.table("data/day_3_input.txt", header = FALSE, sep = "")
engine_raw
dim(engine_raw)
engine <- map_chr(engine_raw, ~ str_split(., ""))
nmaes(engine_raw)
names(engine_raw)
engine <- engine_raw %>%
rename(text = V1)
engine <- map_chr(engine_raw, ~ str_split(., ""))
engine
